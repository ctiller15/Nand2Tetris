// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address, a = aload, b = bload, c = cload, d = dload, e = eload, f = fload, g = gload, h = hload);
    Register(in = in, load = aload, out = regouta);
    Register(in = in, load = bload, out = regoutb);
    Register(in = in, load = cload, out = regoutc);
    Register(in = in, load = dload, out = regoutd);
    Register(in = in, load = eload, out = regoute);
    Register(in = in, load = fload, out = regoutf);
    Register(in = in, load = gload, out = regoutg);
    Register(in = in, load = hload, out = regouth);
    Mux8Way16(a = regouta, b = regoutb, c = regoutc, d = regoutd, e = regoute, f = regoutf, g = regoutg, h = regouth, sel = address, out = out);
}